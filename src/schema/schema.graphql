enum Role {
  ADMIN
  ANONYMOUS
  MEMBER
}

type User {
  createdAt: DateTime
  email: String!
  id: ID!
  roles: [Role!]!
  updatedAt: DateTime
}

scalar DateTime

input CreateUserRequest {
  email: String!
}

type CreateUserResponse {
  user: User
}

input DeleteUserRequest {
  id: ID!
}

type DeleteUserResponse {
  user: User!
}

type Mutation {
  createUser(input: CreateUserRequest): CreateUserResponse
  deleteUser(input: DeleteUserRequest): DeleteUserResponse
  signInEmailPassword(input: SignInEmailPasswordRequest): SignInEmailPasswordResponse
  signUpEmailPassword(input: SignUpEmailPasswordRequest): SignUpEmailPasswordResponse
}

type Query {
  user(id: ID!): User
}

input SignUpEmailPasswordRequest {
  email: String!
  password: String!
}

type SignUpEmailPasswordResponse {
  user: User
  token: String!
}

input SignInEmailPasswordRequest {
  email: String!
  password: String!
}

type SignInEmailPasswordResponse {
  user: User
  token: String!
}
